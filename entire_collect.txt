
#include <iostream>

int main( int argc, char* argv[])
{
    std::cout << "Hello World!" <<std::endl;
    return 0;
}

#include <iostream>

int main( int argc, char* argv[])
{
    std::cout << 10 << std::endl;
    std::cout << 10U << std::endl;
    std::cout << 10.5F << std::endl;
    std::cout << 10.5 << std::endl;
    std::cout << 3+4 <<std::endl;
    return 0;
}
 // 037 - CoutSample.cpp std::cout 사용법

#include <string>
#include <iostream>

int main(int argc, char* argv[])
{
    std::string strData = "Test string";
    std::cout << "Sample string" << std::endl;
    std::cout << strData << std::endl;

    strData = "New string";
    std::cout << strData << std::endl;

    std::cout <<"저는 " << 20 << "살" << "입니다." << std::endl;

    return 0;
}
// 038 - CoutString.cpp - 문자열 조합 출력

#include <string>
#include <cstdio>
#include <iostream>

int main(int argc, char* argv[])
{
    int nAge;
    std::cout << "나이를 입력하세요." << std::endl;
    std::cin >> nAge;

    char szJob[32];
    std::cout << "직업을 입력하세요." << std::endl;
    std::cin >> szJob;

    std::string strName;
    std::cout << "이름을 입력하세요." << std::endl;
    std::cin >> strName  ;

    std::cout << "당신의 이름은 " << strName << "이고, "
        << "나이는 " << nAge << "살이며, "
        << "직업은 " << szJob << "입니다." << std::endl;
     

    return 0;
}
// 039 - CinString.cpp - std::cin 사용법

#include <string>
#include <cstdio>
#include <iostream>

int main(int argc, char* argv[])
{ 
    int a = 10;
    int b(a);
    auto c(b);

    std::cout << a + b + c << std::endl;
    return 0;
}
// 042 - AutoSample.cpp - auto 예약어 사용

#include <iostream>

int main(int argc, char* argv[])
{
    int* pData = new int;
    int* pNewData = new int(10);

    *pData = 5;
    std::cout << *pData << std::endl;
    std::cout << *pNewData << std::endl;

    delete  pData;
    delete pNewData;

}
// 043 - NewDeleteSample.cpp - new 연산자 사용

#include <iostream>
using namespace std;

int main(int argc, char* argv[])
{
    int* arr = new int[5];

    for (int i = 0;i < 5;i++)
        arr[i] = (i + 1) * 10;

    for (int i = 0;i < 5;i++)
        cout << arr[i] << endl;

    delete[]    arr;
    return 0;
    
}
// 044 - NewDeleteArray.cpp - 배열 형태의 객체 생성
 

#include <iostream>
using namespace std;

int main(int argc, char* argv[])
{
    int nData = 10;
    
    int& ref = nData;
    ref = 20;
    cout << nData << endl;

    int* pnData = &nData;
    *pnData = 30;
    cout << nData << endl;

    return 0;
    
}
// 046 - ReferenceType.cpp - 참조형 변수 사용


#include <iostream>
using namespace std;

void TetstFunc(int& rParam) {
    rParam = 100;
}

int main(int argc, char* argv[])
{
    int nData = 0;
    TetstFunc(nData);
    cout << nData << endl;
    return 0; 
}
// 048 - CallByReference.cpp - 참조에 의한 호출


#include <iostream>
using namespace std;

void Swap(int& a, int& b) {
    int nTmp = a;
    a = b;
    b = nTmp;
}
int main(int argc, char* argv[])
{ 
    int x = 10, y = 20;
    Swap(x, y);

    cout << "x: " << x << endl;
    cout << "y: " << y << endl;
    return 0; 

}
// 049 - ReferenceSwap.cpp - 참조 전달
